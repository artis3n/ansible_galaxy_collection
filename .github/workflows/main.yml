name: Testing the Action

on: [pull_request]

env:
  RUNNER_TEMP: /tmp
  TEST_ARTIFACT_VERSION: 0.6.4

jobs:
  local_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: actions/setup-node@v2.5.0
        with:
          node-version: '17.x'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install -g npm
          npm ci

      - name: Check Format
        run: npm run format-check

      - name: Run tests
        run: npm test

  test_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Test the action
        uses: ./
        with:
          api_key: '${{ secrets.GALAXY_API_KEY }}'
          # Fake location that's a small amount of content
          collection_dir: 'fake_collection'

      - name: Test the action with a custom version
        uses: ./
        with:
          api_key: '${{ secrets.GALAXY_API_KEY }}'
          collection_dir: 'fake_collection'
          # Custom version
          galaxy_version: '${{ env.TEST_ARTIFACT_VERSION }}-test'

  test_build_then_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Test the action - only build
        uses: ./
        with:
          api_key: '${{ secrets.GALAXY_API_KEY }}'
          collection_dir: 'fake_collection'
          # Different from above version
          galaxy_version: '${{ env.TEST_ARTIFACT_VERSION }}-build'
          build: true
          publish: false

      - name: Test the action - only publish
        uses: ./
        with:
          api_key: '${{ secrets.GALAXY_API_KEY }}'
          collection_dir: 'fake_collection'
          # Should match version above
          galaxy_version: '${{ env.TEST_ARTIFACT_VERSION }}-build'
          build: false
          publish: true

  snapshot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/artis3n/ansible_galaxy_collection-testartifact
          tags: |
            type=raw,value=SNAPSHOT-${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
